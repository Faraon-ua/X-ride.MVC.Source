@using MVCForum.Domain.Constants
@model MVCForum.Website.ViewModels.EditPostViewModel

@{
    ViewBag.Title = Html.LanguageString("Post.Edit");    
}

@section Header
{
    @(
        Bundle.JavaScript()
            .Add("~/Scripts/jquery.validate.min.js")
            .Add("~/Scripts/jquery.validate.unobtrusive.min.js")
            .Add("~/Scripts/jquery.tagsinput.min.js")
            .Add("~/Scripts/tags.js")
            
            .MvcRender("~/scripts/cache/topic-combined_#.js")
    )
}

@section side
{
    @Html.Action("ListCategorySideMenu", "Category")
    @Html.Action("PopularTags", "Tag")
}

<div class="editpostholder">
    
    @using (Html.BeginForm())
{    
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken()

        <h2>@ViewBag.Title</h2>     
        
        if (Model.IsTopicStarter)
        {
            <div class="row paddedrow">
                <div class="span5 topicname">
                
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Name)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Name)
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>

                </div>

                <div class="span4 topiccategory">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Category)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.Category, new SelectList(Model.Categories, "id", "Name"), Model.Categories.FirstOrDefault().Id)
                        @Html.ValidationMessageFor(model => model.Category)
                    </div>
                </div>
            </div>
        }
        
            <div class="row">
                <div class="span9 topiccontent">

                    <div class="editor-label">
                        @Html.LabelFor(model => model.Content)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Content)
                        @Html.ValidationMessageFor(model => model.Content)
                    </div>

                </div>
            </div>

        if (Model.IsTopicStarter)
        {
            <div class="row">
                <div class="span9 topicadmincheckboxes">
                    @if(Model.Permissions[AppConstants.PermissionCreateStickyTopics].IsTicked)
                    {
                        <div class="editor-field n3ocheckboxfield">
                            @Html.CheckBoxFor(x => x.IsSticky)
                            @Html.LabelFor(x => x.IsSticky)
                        </div>
                    }
                    
                    @if(Model.Permissions[AppConstants.PermissionLockTopics].IsTicked)
                    {
                        <div class="editor-field n3ocheckboxfield">
                            @Html.CheckBoxFor(x => x.IsLocked)
                            @Html.LabelFor(x => x.IsLocked)
                        </div>
                    }
                </div>
            </div>
            
            <div class="row">
                <div class="span9 topictagholder">
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Tags, new { @class = "tagstextarea tags", title = "Tag this topic" })
                    </div>
                </div>
            </div>
        }

        <div class="submit-holder">
            <input type="submit" class="btn btn-large btn-success" value="@Html.LanguageString("Buttons.Edit")" />
        </div>

    @Html.HiddenFor(x => x.Id)
}

</div>