@using MVCForum.Utilities
@model MVCForum.Website.ViewModels.MemberAddViewModel
@{
    ViewBag.Title = Html.LanguageString("Members.Register");  
}

@section Header
{
    @(
 Bundle.JavaScript()
            .Add("~/Scripts/jquery.validate.min.js")
            .Add("~/Scripts/jquery.validate.unobtrusive.min.js")
            .MvcRender("~/scripts/cache/validate-combined_#.js")
    )
}


@if (!User.Identity.IsAuthenticated)
{    
    
    <div class="row">


        <div class="span4 mainregisterform">

            <h3>@ViewBag.Title</h3>

            @using (Html.BeginForm("Register", "Members", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                @Html.ValidationSummary(false)

                <div class="editor-label">
                    @Html.LabelFor(x => @Model.UserName)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(x => @Model.UserName)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(x => @Model.Password)
                </div>     
                <div class="editor-field">
                    @Html.PasswordFor(x => @Model.Password)
                    @Html.ValidationMessageFor(x => x.Password)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(x => @Model.ConfirmPassword)
                </div>     
                <div class="editor-field">
                    @Html.PasswordFor(x => @Model.ConfirmPassword)
                    @Html.ValidationMessageFor(x => x.ConfirmPassword)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(x => @Model.Email)
                </div>    
                <div class="editor-field">
                    @Html.TextBoxFor(x => @Model.Email)
                </div>
        
                if (!string.IsNullOrEmpty(Html.Settings().SpamQuestion))
                {
                <div class="editor-label">
                    <label for="SpamAnswer">@Html.Settings().SpamQuestion</label>
                </div>    
                <div class="editor-field">
                    @Html.TextBoxFor(x => @Model.SpamAnswer)
                </div>             
                }
    
                <div class="submit-holder">
                    <input type="submit" class="btn btn-large btn-success" value="@Html.LanguageString("Members.Register")" />
                </div>
                
                @Html.HiddenFor(x => x.ReturnUrl)
            }
        </div>

    @if(Html.Settings().EnableSocialLogins == true)
    {
        <div class="span1 loginortext">
            @Html.LanguageString("Members.LoginOrText")
        </div>

        <div class="span4 oauthbuttons">
            
            @if (!string.IsNullOrEmpty(ConfigUtils.GetAppSetting("FacebookAppId")) && !string.IsNullOrEmpty(ConfigUtils.GetAppSetting("FacebookAppSecret")))
            {
                <div class="facebookloginbutton">
                    @Html.ActionLink(Html.LanguageString("Members.LogonFacebookButton"), "LogonFacebook", "Members", null, new { @class = "facebookloginbutton" })
                </div>   
            }
            else
            {
                @Html.LanguageString("Facebook.Error.EnabledButNotAddedKeys")
            }

        </div>
    }

    </div>
}
else
{
    <p>@Html.LanguageString("Members.AlreadyRegistered")</p>
}